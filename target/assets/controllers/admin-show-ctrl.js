streamaApp.controller("adminShowCtrl",["$scope","apiService","$stateParams","modalService","$state","uploadService",function(a,d,e,f,k,g){a.seasonOpened=null;a.showLoading=!0;d.tvShow.get(e.showId).success(function(b){a.show=b;d.tvShow.adminEpisodesForTvShow(e.showId).success(function(b){b.length&&(a.seasons=_.groupBy(b,"season_number"),a.setCurrentSeason(_.min(b,"season_number").season_number));a.showLoading=!1;a.highlightOnDashboard=f.newReleaseModal.bind(f,a.show,"tvShow",b)})});a.openShowModal=
function(){f.tvShowModal(a.show,function(b){angular.merge(a.show,b)})};a.addToCurrentNotification=function(){alertify.set({buttonReverse:!0,labels:{ok:"OK",cancel:"Cancel"}});alertify.prompt("Add a description to this TvShow. For instance, tell the users which season you added.",function(a,c){a&&d.notification.addTvShowToCurrentNotification(e.showId,c).success(function(){alertify.success("The TvShow was added to the current notification queue.")})})};a.addNewEpisode=function(){f.videoModal(null,"manual",
a.show,function(b){a.seasons=a.seasons||{};a.seasons[parseInt(b.season_number)]=a.seasons[parseInt(b.season_number)]||[];a.seasons[parseInt(b.season_number)].push(b);a.setCurrentSeason(b.season_number)})};a.deleteShow=function(){alertify.set({buttonReverse:!0,labels:{ok:"Yes",cancel:"Cancel"}});alertify.confirm("Are you sure you want to delete this Show?",function(b){b&&d.tvShow.delete(a.show.id).success(function(){k.go("admin.shows")})})};a.openSeason=function(b){a.seasonOpened=a.seasonOpened!=b?
b:null};a.setCurrentSeason=function(b){(a.currentSeason=b)&&d.theMovieDb.countNewEpisodesForSeason({apiId:a.show.apiId,showId:e.showId,season:b}).success(function(b){a.newEpisodesForSeason=b})};var h=function(b){d.theMovieDb.seasonForShow({apiId:a.show.apiId,showId:e.showId,season:b}).success(function(c){console.log("%c seasonForShow","color: deeppink; font-weight: bold; text-shadow: 0 0 5px deeppink;");a.seasons=a.seasons||{};a.seasons[b]=a.seasons[b]||[];a.seasons[b]=a.seasons[b].concat(c);a.loading=
!1;a.newEpisodesForSeason=null;a.setCurrentSeason(b);alertify.success(c.length+" Episodes fetched")}).error(function(){a.loading=!1})};a.fetchAllEpisodesForSeason=function(){alertify.set({buttonReverse:!0,labels:{ok:"OK",cancel:"Cancel"}});alertify.prompt("For which season would you like to fetch the episodes?",function(b,c){b&&c&&(a.loading=!0,h(c))})};a.refetchSeason=function(a){h(a)};a.deleteSeason=function(b){alertify.set({buttonReverse:!0,labels:{ok:"Yes",cancel:"Cancel"}});alertify.confirm("Are you sure you want to remove the entire season "+
b+"?",function(c){c&&(a.loading=!0,d.tvShow.removeSeason(e.showId,b).success(function(){delete a.seasons[b];a.loading=!1;var c=_.property("season_number")(_.min(a.seasons,"season_number"));c&&a.setCurrentSeason(c)}))})};a.imageUpload={};a.uploadPoster=g.doUpload.bind(g,a.imageUpload,"file/upload.json",function(b){console.log("%c test","color: deeppink; font-weight: bold; text-shadow: 0 0 5px deeppink;",b);a.imageUpload.percentage=null;a.show.poster_image=b.id;d.tvShow.save(a.show).success(function(b){a.show.poster_image_src=
b.poster_image_src})})}]);